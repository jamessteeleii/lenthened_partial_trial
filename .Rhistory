rename(pre = "mtpre",
post = "mtpost") |>
mutate(method = "UT")
) |>
group_by(study, method) |>
summarise(meanpre = mean(pre),
meanpost = mean(post),
sdpre = sd(pre),
sdpost = sd(post),
cor = cor(pre, post))
gentil_summary
n
gentil_summary <- bind_rows(
gentil_data |>
select(participant , study, cpre, cpost) |>
rename(pre = "cpre",
post = "cpost") |>
mutate(method = "circumference"),
gentil_data |>
select(participant , study, mtpre, mtpost) |>
rename(pre = "mtpre",
post = "mtpost") |>
mutate(method = "UT")
) |>
group_by(study, method) |>
summarise(premean = mean(pre),
postmean = mean(post),
presd = sd(pre),
postsd = sd(post),
cor = cor(pre, post),
n = n())
gentil_summary <-  escalc(measure = "SMCR",
m1i = postmean, m2i = premean,
sd1i = presd,
ri = cor, ni = n,
data = wolf_summary
)
library(metafor)
gentil_summary <-  escalc(measure = "SMCR",
m1i = postmean, m2i = premean,
sd1i = presd,
ri = cor, ni = n,
data = wolf_summary
)
gentil_summary <-  escalc(measure = "SMCR",
m1i = postmean, m2i = premean,
sd1i = presd,
ri = cor, ni = n,
data = gentil_summary
)
gentil_summary
rma.mv(yi, vi, mods = ~ method,
data = gentil_summary)
gentil_summary
gentil_meta <- rma.mv(yi, vi, mods = ~ method,
data = gentil_summary)
forest(gentil_meta)
View(data)
targets::tar_make()
targets::tar_load(gentil_effect_sizes)
gentil_effect_sizes
gentil_effect_sizes$b
round(gentil_effect_sizes$b[2], 2)
gentil_effect_sizes$ci.lb
gentil_meta <- rma.mv(yi, vi, mods = ~ 0 + method,
data = gentil_summary)
gentil_meta
targets::tar_make()
targets::tar_load(gentil_effect_sizes)
gentil_meta <- rma.mv(yi, vi, mods = ~ 0 + method,
data = gentil_effect_sizes)
gentil_meta_diff <- rma.mv(yi, vi, mods = ~ method,
data = gentil_effect_sizes)
gentil_meta$b
data_hypertrophy_ready
data_hypertrophy_ready |>
group_by(condition, timepoint) |>
count()
hypertrophy_samples <- data_hypertrophy_ready |>
group_by(timepoint, participant_id) |>
count()
data_hypertrophy_ready |>
group_by(timepoint, participant_id) |>
slice(1) |>
group_by(timepoint, condition) |>
count()
View(data_hypertrophy_ready)
data_hypertrophy_ready |>
group_by(timepoint, participant_id) |>
slice(1) |>
group_by(timepoint, condition, muscle) |>
count()
data_hypertrophy_ready |>
group_by(timepoint, participant_id, muscle) |>
slice(1) |>
group_by(timepoint, condition, muscle) |>
count()
hypertrophy_samples <- data_hypertrophy_ready |>
pivot_wider(values_from = estimated_ma)
hypertrophy_samples <- data_hypertrophy_ready |>
pivot_wider(values_from = "estimated_ma",
names_from = "timepoint")
View(hypertrophy_samples)
data_hypertrophy_ready |>
group_by(timepoint, participant_id, muscle) |>
# slice(1) |>
group_by(timepoint, condition, muscle) |>
count()
data_hypertrophy_ready |>
group_by(timepoint, participant_id, muscle) |>
# slice(1) |>
group_by(timepoint, condition, muscle) |>
count() |>
mutate(
n = n/3
)
data_hypertrophy_ready |>
filter(!is.na(estimated_ma)) |>
group_by(timepoint, condition, muscle) |>
count() |>
mutate(
n = n/3
)
data_hypertrophy_ready |>
filter(!is.na(estimated_ma)) |>
group_by(timepoint, condition, muscle) |>
count()
hypertrophy_sample <- data_hypertrophy_ready |>
group_by(timepoint, participant_id, muscle) |>
slice(1) |>
group_by(timepoint, condition, muscle) |>
count()
hypertrophy_sample
hypertrophy_obs
hypertrophy_obs <- data_hypertrophy_ready |>
filter(!is.na(estimated_ma)) |>
group_by(timepoint, condition, muscle) |>
count()
hypertrophy_obs
data_hypertrophy_ready |>
group_by(timepoint, participant_id, muscle) |>
slice(1) |>
group_by(timepoint, condition) |>
count() |>
mutate(
n = n/2
)
data_strength_ready
strength_sample <- data_strength_ready |>
group_by(timepoint, participant_id, exercise) |>
slice(1) |>
group_by(timepoint, condition) |>
count() |>
mutate(
n = n/2
)
data_strength_ready |>
group_by(timepoint, participant_id, exercise) |>
slice(1)
data_strength_ready
data_strength_ready |>
group_by(participant_id, exercise) |>
slice(1) |>
group_by(condition) |>
count()
data_strength_ready |>
group_by(participant_id) |>
slice(1) |>
group_by(condition) |>
count()
data_strength_ready |>
group_by(participant_id) |>
# slice(1) |>
group_by(condition) |>
count()
data_strength_ready |>
group_by(condition, machine_type) |>
count()
hypertrophy_sample
data_hypertrophy_ready |>
group_by(timepoint, participant_id, muscle) |>
slice(1) |>
ungroup() |>
group_by(timepoint, condition) |>
count() |>
mutate(
n = n/2
)
data_hypertrophy_ready |>
group_by(timepoint, participant_id, muscle) |>
slice(1) |>
ungroup() |>
group_by(condition) |>
count() |>
mutate(
n = n/2
)
data_hypertrophy_ready |>
group_by(timepoint, participant_id, muscle) |>
slice(1) |>
ungroup() |>
group_by(condition) |>
count()
data_hypertrophy_ready |>
group_by(timepoint, participant_id, muscle) |>
slice(1) |>
ungroup() |>
group_by(timepoint, condition) |>
count()
data_hypertrophy_ready |>
group_by(timepoint, participant_id) |>
slice(1) |>
ungroup() |>
group_by(timepoint, condition) |>
count() |>
mutate(
n = n/2
)
data_hypertrophy_ready |>
group_by(timepoint, participant_id) |>
slice(1) |>
ungroup() |>
group_by(timepoint, condition) |>
count()
data_hypertrophy_ready |>
group_by(timepoint, participant_id) |>
slice(1) |>
ungroup() |>
group_by(condition) |>
count() |>
mutate(
n = n/2
)
hypertrophy_obs
strength_sample
strength_sample <- data_strength_ready |>
group_by(participant_id) |>
slice(1) |>
group_by(condition) |>
count()
strength_sample
hypertrophy_sample
hypertrophy_sample <- data_hypertrophy_ready |>
group_by(timepoint, participant_id) |>
slice(1) |>
ungroup() |>
group_by(condition) |>
count() |>
mutate(
n = n/2
)
hypertrophy_sample
134+163
strength_sample
strength_obs
strength_obs <- data_strength_ready |>
group_by(condition, machine_type) |>
count()
strength_obs
hypertrophy_sample
wolf_effect_sizes <- wolf_effect_sizes |>
across(is.numeric(), round(2))
wolf_effect_sizes <- wolf_effect_sizes |>
across(is.numeric, round(2))
wolf_effect_sizes <- wolf_effect_sizes |>
across(is.numeric, round, 2)
wolf_effect_sizes <- wolf_effect_sizes |>
mutate(across(is.numeric, round, 2))
wolf_effect_sizes
table1 |>
kbl() |>
# row_spec(c(3:6,12:14), bold=T) |>
footnote(general = c("ROM = Range of motion")
) %>%
row_spec(0, bold = TRUE) %>%
kable_styling(font_size = 7) |>
kable_classic(full_width = FALSE)
table1 |>
kbl() |>
# row_spec(c(3:6,12:14), bold=T) |>
footnote(general = c("ROM = Range of motion")
) %>%
row_spec(0, bold = TRUE) %>%
kable_styling(font_size = 8) |>
kable_classic(full_width = FALSE)
table1 |>
kbl() |>
# row_spec(c(3:6,12:14), bold=T) |>
footnote(general = c("ROM = Range of motion; Bold exercises performed with either full ROM, or lengthened partial ROM")
) %>%
row_spec(0, bold = TRUE) %>%
kable_classic(full_width = FALSE)
table1 |>
kbl() |>
# row_spec(c(3:6,12:14), bold=T) |>
footnote(general = c("ROM = Range of motion; Bold exercises performed with either full ROM, or lengthened partial ROM")
) %>%
row_spec(0, bold = TRUE) %>%
column_spec(1, bold = if_else(contains("ROM"), TRUE, FALSE))
table1 |>
kbl() |>
# row_spec(c(3:6,12:14), bold=T) |>
footnote(general = c("ROM = Range of motion; Bold exercises performed with either full ROM, or lengthened partial ROM")
) %>%
row_spec(0, bold = TRUE) %>%
column_spec(1, bold = if_else(contains("ROM"), TRUE, FALSE)) |>
kable_classic(full_width = FALSE)
table1 |>
kbl() |>
# row_spec(c(3:6,12:14), bold=T) |>
footnote(general = c("ROM = Range of motion; Bold exercises performed with either full ROM, or lengthened partial ROM")
) %>%
row_spec(0, bold = TRUE) %>%
column_spec(1, bold = if_else(str_detect("ROM") == TRUE, TRUE, FALSE)) |>
kable_classic(full_width = FALSE)
table1 |>
kbl() |>
# row_spec(c(3:6,12:14), bold=T) |>
footnote(general = c("ROM = Range of motion; Bold exercises performed with either full ROM, or lengthened partial ROM")
) %>%
row_spec(0, bold = TRUE) %>%
column_spec(1, bold = if_else(str_detect(.,"ROM") == TRUE, TRUE, FALSE)) |>
kable_classic(full_width = FALSE)
table1 |>
mutate(across(everything(), ~cell_spec(.x, bold = ifelse(as.numeric(str_extract(.x, "ROM"))<0.05, TRUE, FALSE)))) |>
kbl() |>
# row_spec(c(3:6,12:14), bold=T) |>
footnote(general = c("ROM = Range of motion; Bold exercises performed with either full ROM, or lengthened partial ROM")
) %>%
# row_spec(0, bold = TRUE) %>%
# column_spec(1, bold = if_else(str_detect(.,"ROM") == TRUE, TRUE, FALSE)) |>
kable_classic(full_width = FALSE)
table1 |>
mutate(across(everything(), ~cell_spec(.x, bold = ifelse(contains(.x, "ROM"), TRUE, FALSE)))) |>
kbl() |>
# row_spec(c(3:6,12:14), bold=T) |>
footnote(general = c("ROM = Range of motion; Bold exercises performed with either full ROM, or lengthened partial ROM")
) %>%
# row_spec(0, bold = TRUE) %>%
# column_spec(1, bold = if_else(str_detect(.,"ROM") == TRUE, TRUE, FALSE)) |>
kable_classic(full_width = FALSE)
table1 <- tibble(
`Workouts` = c(
"Session 1",
"1. Seated calf press",
"2. Leg press - mid seat position",
"3. Adductor",
"4. Leg extension (either full ROM, or lengthened partial ROM)",
"5. Leg curl (either full ROM, or lengthened partial ROM)",
"6. Leg extension (either full ROM, or lengthened partial ROM)",
"7. Leg curl (either full ROM, or lengthened partial ROM)",
"8. Chest press",
"9. Pulldown - pronated grip",
"10. Overhead press",
"11. Pullover",
"12. Incline supinated dumbbell curl (either full ROM, or lengthened partial ROM)",
"13. French press tricep extension (either full ROM, or lengthened partial ROM)",
"14. Incline hammer curl (either full ROM, or lengthened partial ROM)",
"15. Core torso rotation",
"Session 2",
"1. Leg press - upright seat position",
"2. Abductor",
"3. Leg extension (either full ROM, or lengthened partial ROM)",
"4. Leg curl (either full ROM, or lengthened partial ROM)",
"5. Leg extension (either full ROM, or lengthened partial ROM)",
"6. Leg curl (either full ROM, or lengthened partial ROM)",
"7. Tibia",
"8. Lateral raise",
"9. Incline press",
"10. Seated row",
"11. Overhead press",
"12. Incline supinated dumbbell curl (either full ROM, or lengthened partial ROM)",
"13. French press tricep extension (either full ROM, or lengthened partial ROM)",
"14. Incline hammer curl (either full ROM, or lengthened partial ROM)",
"15. Abdominals",
"16. Core lumbar spine"
)
)
table1 |>
kbl() |>
row_spec(c(1,4:7,12:14,16,19:22,28:30), bold=T) |>
footnote(general = c("ROM = Range of motion; Bold exercises performed with either full ROM, or lengthened partial ROM")
) %>%
row_spec(0, bold = TRUE) %>%
kable_classic(full_width = FALSE)
table1 |>
kbl() |>
row_spec(c(1,5:8,13:15,17,20:23,29:31), bold=T) |>
footnote(general = c("ROM = Range of motion; Bold exercises performed with either full ROM, or lengthened partial ROM")
) %>%
row_spec(0, bold = TRUE) %>%
kable_classic(full_width = FALSE)
table1 |>
kbl() |>
row_spec(c(4:7,12:14,18:21,27:29), bold=T) |>
footnote(general = c("ROM = Range of motion; Bold exercises performed with either full ROM, or lengthened partial ROM")
) %>%
row_spec(0, bold = TRUE) %>%
kable_classic(full_width = FALSE)
table1 <- tibble(
`Workouts` = c(
"1. Seated calf press",
"2. Leg press - mid seat position",
"3. Adductor",
"4. Leg extension (either full ROM, or lengthened partial ROM)",
"5. Leg curl (either full ROM, or lengthened partial ROM)",
"6. Leg extension (either full ROM, or lengthened partial ROM)",
"7. Leg curl (either full ROM, or lengthened partial ROM)",
"8. Chest press",
"9. Pulldown - pronated grip",
"10. Overhead press",
"11. Pullover",
"12. Incline supinated dumbbell curl (either full ROM, or lengthened partial ROM)",
"13. French press tricep extension (either full ROM, or lengthened partial ROM)",
"14. Incline hammer curl (either full ROM, or lengthened partial ROM)",
"15. Core torso rotation",
"1. Leg press - upright seat position",
"2. Abductor",
"3. Leg extension (either full ROM, or lengthened partial ROM)",
"4. Leg curl (either full ROM, or lengthened partial ROM)",
"5. Leg extension (either full ROM, or lengthened partial ROM)",
"6. Leg curl (either full ROM, or lengthened partial ROM)",
"7. Tibia",
"8. Lateral raise",
"9. Incline press",
"10. Seated row",
"11. Overhead press",
"12. Incline supinated dumbbell curl (either full ROM, or lengthened partial ROM)",
"13. French press tricep extension (either full ROM, or lengthened partial ROM)",
"14. Incline hammer curl (either full ROM, or lengthened partial ROM)",
"15. Abdominals",
"16. Core lumbar spine"
)
)
table1 |>
kbl() |>
row_spec(c(4:7,12:14,18:21,27:29), bold=T) |>
footnote(general = c("ROM = Range of motion; Bold exercises performed with either full ROM, or lengthened partial ROM")
) %>%
row_spec(0, bold = TRUE) %>%
kable_classic(full_width = FALSE)
table1 |>
kbl() |>
row_spec(c(4:7,12:14,18:21,27:29), bold=T) |>
pack_rows("Session 1", 1, 15) %>%
pack_rows("Session 2", 16, 31) %>%
footnote(general = c("ROM = Range of motion; Bold exercises performed with either full ROM, or lengthened partial ROM")
) %>%
row_spec(0, bold = TRUE) %>%
kable_classic(full_width = FALSE)
table1 <- tibble(
`Workouts` = c(
"1. Seated calf press",
"2. Leg press - mid seat position",
"3. Adductor",
"4. Leg extension",
"5. Leg curl",
"6. Leg extension",
"7. Leg curl",
"8. Chest press",
"9. Pulldown - pronated grip",
"10. Overhead press",
"11. Pullover",
"12. Incline supinated dumbbell curl",
"13. French press tricep extension",
"14. Incline hammer curl",
"15. Core torso rotation",
"1. Leg press - upright seat position",
"2. Abductor",
"3. Leg extension",
"4. Leg curl",
"5. Leg extension",
"6. Leg curl",
"7. Tibia",
"8. Lateral raise",
"9. Incline press",
"10. Seated row",
"11. Overhead press",
"12. Incline supinated dumbbell curl",
"13. French press tricep extension",
"14. Incline hammer curl",
"15. Abdominals",
"16. Core lumbar spine"
)
)
table1 |>
kbl() |>
row_spec(c(4:7,12:14,18:21,27:29), bold=T) |>
pack_rows("Session 1", 1, 15) %>%
pack_rows("Session 2", 16, 31) %>%
footnote(general = c("ROM = Range of motion; Bold exercises performed with either full ROM, or lengthened partial ROM")
) %>%
row_spec(0, bold = TRUE) %>%
kable_classic(full_width = FALSE)
table1 |>
kable() |>
row_spec(c(4:7,12:14,18:21,27:29), bold=T) |>
pack_rows("Session 1", 1, 15) %>%
pack_rows("Session 2", 16, 31) %>%
footnote(general = c("ROM = Range of motion; Bold exercises performed with either full ROM, or lengthened partial ROM")
) %>%
row_spec(0, bold = TRUE) %>%
kable_classic(full_width = FALSE)
targets::tar_load(data_hypertrophy_ready)
length(unique(data_hypertrophy_ready$participant_id))
library(metafor)
targets::tar_load(gentil_effect_sizes)
gentil_meta <- rma.mv(yi, vi, mods = ~ 0 + method,
data = gentil_effect_sizes)
gentil_meta_diff <- rma.mv(yi, vi, mods = ~ method,
data = gentil_effect_sizes)
gentil_meta
