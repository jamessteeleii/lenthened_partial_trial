color = "Number of Measurements per Timepoint (N)",
title = "Sample Size Estimation (N per Site)",
subtitle = "Simulated to detect a standardised effect for condition:time of 0.1\nSite number fixed at 15, \u03b1 = 0.05 (corrected to 0.025 for two primary outcomes)",
caption = "1000 simulations per combination of participants, number of measurements, and timepoints"
) +
theme_bw() +
theme(legend.position = "bottom")
plot_0_2 <- sim_0_2 |>
filter(term == "time:cond_dummy") |>
mutate(time_n = case_when(time_n == 0.5 ~ "Include Midpoint",
time_n == 1 ~ "No Midpoint",)) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
group_by(measurements_n, participant_n, time_n) |>
summarise(power = mean(p.value < .75),
.groups = "drop") |>
ggplot(aes(
x = participant_n,
y = power,
color = factor(measurements_n)
)) +
geom_hline(yintercept = 0.95, linetype = "dashed") +
geom_point() +
geom_smooth(se = FALSE) +
scale_color_manual(values = c("#000000", "#E69F00", "#56B4E9")) +
facet_wrap("time_n") +
labs(
x = "Total Number of Participants per Site (N)",
y = "Power (1-\u03b2)",
color = "Number of Measurements per Timepoint (N)",
title = "Sample Size Estimation (N per Site)",
subtitle = "Simulated to detect a standardised effect for condition:time of 0.1\nSite number fixed at 15, \u03b1 = 0.05 (corrected to 0.025 for two primary outcomes)",
caption = "1000 simulations per combination of participants, number of measurements, and timepoints"
) +
theme_bw() +
theme(legend.position = "bottom")
plot_0_2 <- sim_0_2 |>
filter(term == "time:cond_dummy") |>
mutate(time_n = case_when(time_n == 0.5 ~ "Include Midpoint",
time_n == 1 ~ "No Midpoint",)) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
group_by(measurements_n, participant_n, time_n) |>
summarise(power = mean(p.value < .025),
.groups = "drop") |>
ggplot(aes(
x = participant_n,
y = power,
color = factor(measurements_n)
)) +
geom_hline(yintercept = 0.95, linetype = "dashed") +
geom_point() +
geom_smooth(se = FALSE) +
scale_color_manual(values = c("#000000", "#E69F00", "#56B4E9")) +
facet_wrap("time_n") +
labs(
x = "Total Number of Participants per Site (N)",
y = "Power (1-\u03b2)",
color = "Number of Measurements per Timepoint (N)",
title = "Sample Size Estimation (N per Site)",
subtitle = "Simulated to detect a standardised effect for condition:time of 0.1\nSite number fixed at 15, \u03b1 = 0.05 (corrected to 0.025 for two primary outcomes)",
caption = "1000 simulations per combination of participants, number of measurements, and timepoints"
) +
theme_bw() +
theme(legend.position = "bottom")
plot_0_2
plot_0_2 <- sim_0_2 |>
filter(term == "time:cond_dummy") |>
mutate(time_n = case_when(time_n == 0.5 ~ "Include Midpoint",
time_n == 1 ~ "No Midpoint",)) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
group_by(measurements_n, participant_n, time_n) |>
summarise(power = mean(p.value.nonsup < .025),
.groups = "drop") |>
ggplot(aes(
x = participant_n,
y = power,
color = factor(measurements_n)
)) +
geom_hline(yintercept = 0.95, linetype = "dashed") +
geom_point() +
geom_smooth(se = FALSE) +
scale_color_manual(values = c("#000000", "#E69F00", "#56B4E9")) +
facet_wrap("time_n") +
labs(
x = "Total Number of Participants per Site (N)",
y = "Power (1-\u03b2)",
color = "Number of Measurements per Timepoint (N)",
title = "Sample Size Estimation (N per Site)",
subtitle = "Simulated to detect a standardised effect for condition:time of 0.1\nSite number fixed at 15, \u03b1 = 0.05 (corrected to 0.025 for two primary outcomes)",
caption = "1000 simulations per combination of participants, number of measurements, and timepoints"
) +
theme_bw() +
theme(legend.position = "bottom")
plot_0_2
plot_0_2 <- sim_0_2 |>
filter(term == "time:cond_dummy") |>
mutate(time_n = case_when(time_n == 0.5 ~ "Include Midpoint",
time_n == 1 ~ "No Midpoint",)) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
group_by(measurements_n, participant_n, time_n) |>
pivot_longer(c("p.value", "p.value.nonsup"),
names_to = "test",
values_to = "p.value")
View(plot_0_2)
plot_0_2 <- sim_0_2 |>
filter(term == "time:cond_dummy") |>
mutate(time_n = case_when(time_n == 0.5 ~ "Include Midpoint",
time_n == 1 ~ "No Midpoint",)) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
pivot_longer(c("p.value", "p.value.nonsup"),
names_to = "test",
values_to = "p.value") |>
mutate(test = case_when(test == "p.value" ~ "Difference",
test == "p.value.nonsup" ~ "Non-superiority",)) |>
group_by(measurements_n, participant_n, time_n) |>
summarise(power = mean(p.value < .025),
.groups = "drop") |>
ggplot(aes(
x = participant_n,
y = power,
color = factor(measurements_n)
)) +
geom_hline(yintercept = 0.95, linetype = "dashed") +
geom_point() +
geom_smooth(se = FALSE) +
scale_color_manual(values = c("#000000", "#E69F00", "#56B4E9")) +
facet_grid(time_n * test) +
labs(
x = "Total Number of Participants per Site (N)",
y = "Power (1-\u03b2)",
color = "Number of Measurements per Timepoint (N)",
title = "Sample Size Estimation (N per Site)",
subtitle = "Simulated to detect a standardised effect for condition:time of 0.1\nSite number fixed at 15, \u03b1 = 0.05 (corrected to 0.025 for two primary outcomes)",
caption = "1000 simulations per combination of participants, number of measurements, and timepoints"
) +
theme_bw() +
theme(legend.position = "bottom")
plot_0_2
sim_0_2 |>
filter(term == "time:cond_dummy") |>
mutate(time_n = case_when(time_n == 0.5 ~ "Include Midpoint",
time_n == 1 ~ "No Midpoint",)) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
pivot_longer(c("p.value", "p.value.nonsup"),
names_to = "test",
values_to = "p.value") |>
mutate(test = case_when(test == "p.value" ~ "Difference",
test == "p.value.nonsup" ~ "Non-superiority",)) |>
group_by(measurements_n, participant_n, time_n) |>
summarise(power = mean(p.value < .025),
.groups = "drop")
plot_0_2 <- sim_0_2 |>
filter(term == "time:cond_dummy") |>
mutate(time_n = case_when(time_n == 0.5 ~ "Include Midpoint",
time_n == 1 ~ "No Midpoint",)) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
pivot_longer(c("p.value", "p.value.nonsup"),
names_to = "test",
values_to = "p.value") |>
mutate(test = case_when(test == "p.value" ~ "Difference",
test == "p.value.nonsup" ~ "Non-superiority",)) |>
group_by(measurements_n, participant_n, time_n, test) |>
summarise(power = mean(p.value < .025),
.groups = "drop") |>
ggplot(aes(
x = participant_n,
y = power,
color = factor(measurements_n)
)) +
geom_hline(yintercept = 0.95, linetype = "dashed") +
geom_point() +
geom_smooth(se = FALSE) +
scale_color_manual(values = c("#000000", "#E69F00", "#56B4E9")) +
facet_grid(time_n * test) +
labs(
x = "Total Number of Participants per Site (N)",
y = "Power (1-\u03b2)",
color = "Number of Measurements per Timepoint (N)",
title = "Sample Size Estimation (N per Site)",
subtitle = "Simulated to detect a standardised effect for condition:time of 0.1\nSite number fixed at 15, \u03b1 = 0.05 (corrected to 0.025 for two primary outcomes)",
caption = "1000 simulations per combination of participants, number of measurements, and timepoints"
) +
theme_bw() +
theme(legend.position = "bottom")
plot_0_2
sim_0_2 |>
filter(term == "time:cond_dummy") |>
mutate(time_n = case_when(time_n == 0.5 ~ "Include Midpoint",
time_n == 1 ~ "No Midpoint",)) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
pivot_longer(c("p.value", "p.value.nonsup"),
names_to = "test",
values_to = "p.value") |>
mutate(test = case_when(test == "p.value" ~ "Difference",
test == "p.value.nonsup" ~ "Non-superiority",)) |>
group_by(measurements_n, participant_n, time_n, test) |>
summarise(power = mean(p.value < .025),
.groups = "drop")
plot_0_2 <- sim_0_2 |>
filter(term == "time:cond_dummy") |>
mutate(time_n = case_when(time_n == 0.5 ~ "Include Midpoint",
time_n == 1 ~ "No Midpoint",)) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
pivot_longer(c("p.value", "p.value.nonsup"),
names_to = "test",
values_to = "p.value") |>
mutate(test = case_when(test == "p.value" ~ "Difference",
test == "p.value.nonsup" ~ "Non-superiority",)) |>
group_by(measurements_n, participant_n, time_n, test) |>
summarise(power = mean(p.value < .025),
.groups = "drop") |>
ggplot(aes(
x = participant_n,
y = power,
color = factor(measurements_n)
)) +
geom_hline(yintercept = 0.95, linetype = "dashed") +
geom_point() +
geom_smooth(se = FALSE) +
scale_color_manual(values = c("#000000", "#E69F00", "#56B4E9")) +
facet_grid(time_n ~ test) +
labs(
x = "Total Number of Participants per Site (N)",
y = "Power (1-\u03b2)",
color = "Number of Measurements per Timepoint (N)",
title = "Sample Size Estimation (N per Site)",
subtitle = "Simulated to detect a standardised effect for condition:time of 0.1\nSite number fixed at 15, \u03b1 = 0.05 (corrected to 0.025 for two primary outcomes)",
caption = "1000 simulations per combination of participants, number of measurements, and timepoints"
) +
theme_bw() +
theme(legend.position = "bottom")
plot_0_2
sim_0_2 |>
filter(term == "time:cond_dummy") |>
mutate(time_n = case_when(time_n == 0.5 ~ "Include Midpoint",
time_n == 1 ~ "No Midpoint",)) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
pivot_longer(c("p.value", "p.value.nonsup"),
names_to = "test",
values_to = "p.value") |>
mutate(test = case_when(test == "p.value" ~ "Difference",
test == "p.value.nonsup" ~ "Non-superiority",)) |>
group_by(measurements_n, participant_n, time_n, test) |>
summarise(power = mean(p.value < .025),
.groups = "drop")
plot_0_2 <- sim_0_2 |>
filter(term == "time:cond_dummy") |>
mutate(time_n = case_when(time_n == 0.5 ~ "Include Midpoint",
time_n == 1 ~ "No Midpoint",)) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
pivot_longer(c("p.value", "p.value.nonsup"),
names_to = "test",
values_to = "p.value") |>
mutate(test = case_when(test == "p.value" ~ "Difference",
test == "p.value.nonsup" ~ "Non-superiority",)) |>
group_by(measurements_n, participant_n, time_n, test) |>
summarise(power = mean(p.value < .025),
.groups = "drop") |>
ggplot(aes(
x = participant_n,
y = power,
color = factor(measurements_n)
)) +
geom_hline(yintercept = 0.95, linetype = "dashed") +
geom_point() +
geom_smooth(se = FALSE) +
scale_color_manual(values = c("#000000", "#E69F00", "#56B4E9")) +
facet_grid(time_n + measurements_n ~ test) +
labs(
x = "Total Number of Participants per Site (N)",
y = "Power (1-\u03b2)",
color = "Number of Measurements per Timepoint (N)",
title = "Sample Size Estimation (N per Site)",
subtitle = "Simulated to detect a standardised effect for condition:time of 0.1\nSite number fixed at 15, \u03b1 = 0.05 (corrected to 0.025 for two primary outcomes)",
caption = "1000 simulations per combination of participants, number of measurements, and timepoints"
) +
theme_bw() +
theme(legend.position = "bottom")
plot_0_2
install.packages("ggh4x")
targets::tar_visnetwork()
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_load_everything(sim_var_effect)
targets::tar_load(sim_var_effect)
View(sim_var_effect)
sim_var_effect |>
filter(term == "time:cond_dummy") |>
mutate(
time_n = case_when(
time_n == 0.5 ~ "Include Midpoint",
time_n == 1 ~ "No Midpoint",
)
)
sim_var_effect |>
filter(term == "time:cond_dummy") |>
mutate(
time_n = case_when(
time_n == 0.5 ~ "Include Midpoint",
time_n == 1 ~ "No Midpoint",
)
) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
mutate(
u_time = case_when(
u_time == 0.1825 ~ "5% Negative Slopes",
u_time == 0.2325 ~ "10% Negative Slopes",
)
)
plot_sim_diff <- sim_var_effect |>
filter(term == "time:cond_dummy") |>
mutate(
time_n = case_when(
time_n == 0.5 ~ "Include Midpoint",
time_n == 1 ~ "No Midpoint",
)
) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
mutate(
u_time = case_when(
u_time == 0.1825 ~ "5% Negative Slopes",
u_time == 0.2325 ~ "10% Negative Slopes",
)
) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
pivot_longer(c("p.value", "p.value.nonsup"),
names_to = "test",
values_to = "p.value") |>
mutate(test = case_when(test == "p.value" ~ "Difference",
test == "p.value.nonsup" ~ "Non-superiority")) |>
group_by(measurements_n, participant_n, time_n, u_time, test) |>
summarise(power = mean(p.value < .005),
.groups = "drop") |>
ggplot(aes(x = participant_n, y = power, color = factor(measurements_n))) +
geom_hline(yintercept = 0.95, linetype = "dashed") +
geom_point() +
geom_line() +
scale_color_manual(values = c("#000000", "#E69F00", "#56B4E9")) +
facet_nested(time_n + u_time ~ test) +
labs(
x = "Total Number of Participants per Site (N)",
y = "Power (1-\u03b2)",
color = "Number of Measurements per Timepoint (N)",
title = "Sample Size Estimation (N per Site)",
subtitle = expression(~italic(y)[ijtk]~" = (\u03b2"[0]~" + "~u[k]~" + "~u[i]~") + \u03b2"[1]~"condition"[j]~" + (\u03b2"[2]~" + "~u[j]~")time"[t]~" + \u03b2"[3]~"condition:time"[jt]~" + \u03f5"[ijtk]),
caption = "Simulated to detect a standardised effect, or non-superiority, for condition:time with a SESOI of 0.1\nSite number k fixed at 15, \u03b1 = 0.05 (corrected to 0.025 for two primary outcomes i.e., arm and thigh muscle area)\n1000 simulations per combination of participants, number of measurements, and timepoints"
) +
theme_bw() +
theme(legend.position = "bottom")
plot_sim_diff <- sim_var_effect |>
filter(term == "time:cond_dummy") |>
mutate(
time_n = case_when(
time_n == 0.5 ~ "Include Midpoint",
time_n == 1 ~ "No Midpoint",
)
) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
mutate(
u_time = case_when(
u_time == 0.1825 ~ "5% Negative Slopes",
u_time == 0.2325 ~ "10% Negative Slopes",
)
) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
pivot_longer(c("p.value", "p.value.nonsup"),
names_to = "test",
values_to = "p.value") |>
mutate(test = case_when(test == "p.value" ~ "Difference",
test == "p.value.nonsup" ~ "Non-superiority")) |>
group_by(measurements_n, participant_n, time_n, u_time, test) |>
summarise(power = mean(p.value < .005),
.groups = "drop") |>
ggplot(aes(x = participant_n, y = power, color = factor(measurements_n))) +
geom_hline(yintercept = 0.95, linetype = "dashed") +
geom_point() +
geom_line() +
scale_color_manual(values = c("#000000", "#E69F00", "#56B4E9")) +
ggh4x::facet_nested(time_n + u_time ~ test) +
labs(
x = "Total Number of Participants per Site (N)",
y = "Power (1-\u03b2)",
color = "Number of Measurements per Timepoint (N)",
title = "Sample Size Estimation (N per Site)",
subtitle = expression(~italic(y)[ijtk]~" = (\u03b2"[0]~" + "~u[k]~" + "~u[i]~") + \u03b2"[1]~"condition"[j]~" + (\u03b2"[2]~" + "~u[j]~")time"[t]~" + \u03b2"[3]~"condition:time"[jt]~" + \u03f5"[ijtk]),
caption = "Simulated to detect a standardised effect, or non-superiority, for condition:time with a SESOI of 0.1\nSite number k fixed at 15, \u03b1 = 0.05 (corrected to 0.025 for two primary outcomes i.e., arm and thigh muscle area)\n1000 simulations per combination of participants, number of measurements, and timepoints"
) +
theme_bw() +
theme(legend.position = "bottom")
plot_sim
plot_sim <- sim_var_effect |>
filter(term == "time:cond_dummy") |>
mutate(
time_n = case_when(
time_n == 0.5 ~ "Include Midpoint",
time_n == 1 ~ "No Midpoint",
)
) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
mutate(
u_time = case_when(
u_time == 0.1825 ~ "5% Negative Slopes",
u_time == 0.2325 ~ "10% Negative Slopes",
)
) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
pivot_longer(c("p.value", "p.value.nonsup"),
names_to = "test",
values_to = "p.value") |>
mutate(test = case_when(test == "p.value" ~ "Difference",
test == "p.value.nonsup" ~ "Non-superiority")) |>
group_by(measurements_n, participant_n, time_n, u_time, test) |>
summarise(power = mean(p.value < .005),
.groups = "drop") |>
ggplot(aes(x = participant_n, y = power, color = factor(measurements_n))) +
geom_hline(yintercept = 0.95, linetype = "dashed") +
geom_point() +
geom_line() +
scale_color_manual(values = c("#000000", "#E69F00", "#56B4E9")) +
ggh4x::facet_nested(time_n + u_time ~ test) +
labs(
x = "Total Number of Participants per Site (N)",
y = "Power (1-\u03b2)",
color = "Number of Measurements per Timepoint (N)",
title = "Sample Size Estimation (N per Site)",
subtitle = expression(~italic(y)[ijtk]~" = (\u03b2"[0]~" + "~u[k]~" + "~u[i]~") + \u03b2"[1]~"condition"[j]~" + (\u03b2"[2]~" + "~u[j]~")time"[t]~" + \u03b2"[3]~"condition:time"[jt]~" + \u03f5"[ijtk]),
caption = "Simulated to detect a standardised effect, or non-superiority, for condition:time with a SESOI of 0.1\nSite number k fixed at 15, \u03b1 = 0.05 (corrected to 0.025 for two primary outcomes i.e., arm and thigh muscle area)\n1000 simulations per combination of participants, number of measurements, and timepoints"
) +
theme_bw() +
theme(legend.position = "bottom")
plot_sim
plot_sim <- sim_var_effect |>
filter(term == "time:cond_dummy") |>
mutate(
time_n = case_when(
time_n == 0.5 ~ "Include Midpoint",
time_n == 1 ~ "No Midpoint",
)
) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
mutate(
u_time = case_when(
u_time == 0.1825 ~ "5% Negative Slopes",
u_time == 0.2325 ~ "10% Negative Slopes",
)
) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
pivot_longer(c("p.value", "p.value.nonsup"),
names_to = "test",
values_to = "p.value") |>
mutate(test = case_when(test == "p.value" ~ "Difference",
test == "p.value.nonsup" ~ "Non-superiority")) |>
group_by(measurements_n, participant_n, time_n, u_time, test) |>
summarise(power = mean(p.value < .005),
.groups = "drop")
View(plot_sim)
sim_var_effect |>
filter(term == "time:cond_dummy") |>
mutate(
time_n = case_when(
time_n == 0.5 ~ "Include Midpoint",
time_n == 1 ~ "No Midpoint",
)
)
plot_sim <- sim_var_effect |>
filter(term == "time:cond_dummy") |>
mutate(
time_n = case_when(
time_n == 0.5 ~ "Include Midpoint",
time_n == 1 ~ "No Midpoint",
)
) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
mutate(
u_time = case_when(
u_time == 0.0304 ~ "5% Negative Slopes",
u_time == 0.039 ~ "10% Negative Slopes",
)
) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
pivot_longer(c("p.value", "p.value.nonsup"),
names_to = "test",
values_to = "p.value") |>
mutate(test = case_when(test == "p.value" ~ "Difference",
test == "p.value.nonsup" ~ "Non-superiority")) |>
group_by(measurements_n, participant_n, time_n, u_time, test) |>
summarise(power = mean(p.value < .005),
.groups = "drop") |>
ggplot(aes(x = participant_n, y = power, color = factor(measurements_n))) +
geom_hline(yintercept = 0.95, linetype = "dashed") +
geom_point() +
geom_line() +
scale_color_manual(values = c("#000000", "#E69F00", "#56B4E9")) +
ggh4x::facet_nested(time_n + u_time ~ test) +
labs(
x = "Total Number of Participants per Site (N)",
y = "Power (1-\u03b2)",
color = "Number of Measurements per Timepoint (N)",
title = "Sample Size Estimation (N per Site)",
subtitle = expression(~italic(y)[ijtk]~" = (\u03b2"[0]~" + "~u[k]~" + "~u[i]~") + \u03b2"[1]~"condition"[j]~" + (\u03b2"[2]~" + "~u[j]~")time"[t]~" + \u03b2"[3]~"condition:time"[jt]~" + \u03f5"[ijtk]),
caption = "Simulated to detect a standardised effect, or non-superiority, for condition:time with a SESOI of 0.1\nSite number k fixed at 15, \u03b1 = 0.05 (corrected to 0.025 for two primary outcomes i.e., arm and thigh muscle area)\n1000 simulations per combination of participants, number of measurements, and timepoints"
) +
theme_bw() +
theme(legend.position = "bottom")
plot_sim
targets::tar_make()
targets::tar_make()
targets::tar_visnetwork(targets_only = TRUE)
??plan
?plan
