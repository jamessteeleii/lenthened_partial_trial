### Note, data is coded with study and arm as having explicit nesting so all random effects are (~ 1 | study, ~ 1 | arm)
Meta_CON_ri <- rma.mv(yi, V=vi, data=Data,
slab=paste(label),
random = list(~ 1 | study, ~ 1 | arm, ~ 1 | es), method="REML", test="t",
control=list(optimizer="optim", optmethod="Nelder-Mead"))
RobuEstMeta_CON_ri <- robust(Meta_CON_ri, Data$study)
z2r_CON <- psych::fisherz2r(RobuEstMeta_CON_ri$b[1])
Data$CON_ri <- ifelse(is.na(Data$CON_ri), z2r_CON, Data$CON_ri)
# Estimate change score difference SD where only pre-post data available
Data$RT_delta_sd <- replmiss(Data$RT_delta_sd, with(Data, sqrt(RT_pre_sd^2 + RT_post_sd^2 - (2*RT_ri*RT_pre_sd*RT_post_sd))))
Data$CON_delta_sd <- replmiss(Data$CON_delta_sd, with(Data, sqrt(CON_pre_sd^2 + CON_post_sd^2 - (2*CON_ri*CON_pre_sd*CON_post_sd))))
# Arm based effect size calculations
Data_strength <- Data %>%
filter(outcome == "strength")
Data_SMD_strength_RT <- Data_strength |>
select(study, arm, es, RT_n, RT_pre_m, RT_post_m, RT_pre_sd, RT_post_sd, RT_ri, weeks)
Data_SMD_strength_RT <-  escalc(measure = "SMCR",
m1i = RT_post_m, m2i = RT_pre_m,
sd1i = RT_post_sd,
ri = RT_ri, ni = RT_n,
data = Data_SMD_strength_RT
)
Data_SMD_strength_RT <- Data_SMD_strength_RT %>%
filter(!is.na(vi) &
!is.infinite(vi)) %>%
mutate(se = sqrt(vi),
wi = 1/sqrt(vi),
size = 0.5 + 3 * (wi - min(wi))/(max(wi) - min(wi))) |>
select(study, arm, es, yi, vi, weeks)   |>
mutate(arm = as.factor(unclass(factor(unlist(arm)))),
es = as.factor(unclass(factor(unlist(es)))))
Data_SMD_strength_CON <- Data_strength |>
select(study, arm, es, CON_n, CON_pre_m, CON_post_m, CON_pre_sd, CON_post_sd, CON_ri, weeks)
Data_SMD_strength_CON <-  escalc(measure = "SMCR",
m1i = CON_post_m, m2i = CON_pre_m,
sd1i = CON_post_sd,
ri = CON_ri, ni = CON_n,
data = Data_SMD_strength_CON
)
Data_SMD_strength_CON <- Data_SMD_strength_CON %>%
filter(!is.na(vi) &
!is.infinite(vi)) %>%
mutate(se = sqrt(vi),
wi = 1/sqrt(vi),
size = 0.5 + 3 * (wi - min(wi))/(max(wi) - min(wi))) |>
select(study, arm, es, yi, vi, weeks) %>%
mutate(weeks = 0)    |>
distinct(yi, .keep_all = TRUE) |>
mutate(arm = as.factor(unclass(factor(unlist(arm)))+length(unique(Data_SMD_strength_RT$arm))),
es = as.factor(unclass(factor(unlist(es)))+length(unique(Data_SMD_strength_RT$es))))
data <- rbind(Data_SMD_strength_RT, Data_SMD_strength_CON)
MultiLevelModel_SMD_strength_weeks_arm <- rma.mv(yi, V=vi, data=data,
random = list(~ log1p(weeks) | study, ~ 1 | arm, ~ 1 | es), mods = ~ log1p(weeks),
method="REML", test="t", struct = "GEN"
)
data <- rbind(Data_SMD_strength_RT, Data_SMD_strength_CON)
data
MultiLevelModel_SMD_hypertrophy_weeks_arm <- rma.mv(yi, V=vi, data=data,
random = list(~ log1p(weeks) | study, ~ 1 | arm, ~ 1 | es), mods = ~ log1p(weeks),
method="REML", test="t", struct = "GEN"
)
RobuEstMultiLevelModel_SMD_hypertrophy_weeks_arm <- robust(MultiLevelModel_SMD_hypertrophy_weeks_arm, data$study)
ref_grid <- qdrg(object=RobuEstMultiLevelModel_SMD_hypertrophy_weeks_arm, data=data, at = list(weeks = c(24, 36)))
emt <- update(contrast(ref_grid, "consec", simple = "weeks"), by = NULL)
slope <- confint(emt)
slope
data_log <- cbind(data, predict(model)) %>%
mutate(wi = 1/sqrt(vi),
size = 0.5 + 3.0 * (wi - min(wi))/(max(wi) - min(wi)))
data_log <- cbind(data, predict(RobuEstMultiLevelModel_SMD_hypertrophy_weeks_arm)) %>%
mutate(wi = 1/sqrt(vi),
size = 0.5 + 3.0 * (wi - min(wi))/(max(wi) - min(wi)))
preds_arm <- as.data.frame(predict(RobuEstMultiLevelModel_SMD_hypertrophy_weeks_arm, newmods = c(log1p(0:80)))) |>
mutate(weeks = 0:80)
preds_arm_12_24_36 <- as.data.frame(predict(RobuEstMultiLevelModel_SMD_hypertrophy_weeks_arm, newmods = log1p(c(12,24,36)))) |>
mutate(weeks = c(12,24,36))
plot_log_growth_MA_model <- ggplot(data_log, aes(x=weeks)) +
geom_hline(aes(yintercept = 0), alpha = 0.1, lty = "dashed") +
geom_point(aes(y=yi,size = size), alpha = 0.1) +
geom_ribbon(data=preds_arm,aes(ymax=ci.ub, ymin=ci.lb), alpha = 0.2) +
geom_line(data=preds_arm, aes(y=pred)) +
annotate("text",
x = 12, y = -1, size = 3,
label = glue::glue("12wks: {round(preds_arm_12_24_36$pred[1],2)}")) +
annotate("text",
x = 12, y = -1.2, size = 3,
label = glue::glue("[95%CI: {round(preds_arm_12_24_36$ci.lb[1],2)}, {round(preds_arm_12_24_36$ci.ub[1],2)}]")) +
annotate("text",
x = 24, y = -1, size = 3,
label = glue::glue("24wks: {round(preds_arm_12_24_36$pred[2],2)}")) +
annotate("text",
x = 24, y = -1.2, size = 3,
label = glue::glue("[95%CI: {round(preds_arm_12_24_36$ci.lb[2],2)}, {round(preds_arm_12_24_36$ci.ub[2],2)}]")) +
annotate("text",
x = 36, y = -1, size = 3,
label = glue::glue("36wks: {round(preds_arm_12_24_36$pred[3],2)}")) +
annotate("text",
x = 36, y = -1.2, size = 3,
label = glue::glue("[95%CI: {round(preds_arm_12_24_36$ci.lb[3],2)}, {round(preds_arm_12_24_36$ci.ub[3],2)}]")) +
labs(y = "Standardised Mean Change", x = "Weeks") +
theme_classic() +
labs(title = "Strength Outcomes",
subtitle = "Arm-based model - random intercepts (effect, arm, study) and slopes (study)",
caption = "Data from Steele et al. (2023), DOI: 10.1080/02640414.2023.2286748") +
guides(size = "none", fill = "none")
plot_log_growth_MA_model
targets::tar_make()
targets::tar_make()
targets::tar_make()
84/100
1/84
0.01190476*84
targets::tar_load(results_hypertrophy)
targets::tar_load(results_strength)
targets::tar_load(results_explore_hypertrophy)
targets::tar_load(plot_hypertrophy)
targets::tar_load(plots_hypertrophy)
targets::tar_load(plots_strength)
targets::tar_load(plots_explore_hypertrophy)
results_hypertrophy
View(plots_explore_hypertrophy)
plots_explore_hypertrophy
View(results_hypertrophy)
library(tidyverse)
library(lme4)
library(lmerTest)
library(marginaleffects)
library(patchwork)
library(ggdist)
library(glue)
data<-read_csv("data/PD_data_hypertrophy.csv")
model_results <- tibble(term = as.character(),
estimate = as.numeric(),
std.error = as.numeric(),
statistic = as.numeric(),
p.value = as.numeric(),
s.value = as.numeric(),
conf.low = as.numeric(),
conf.high = as.numeric(),
df = as.integer(),
statistic.noninf = as.numeric(),
statistic.nonsup = as.numeric(),
p.value.noninf = as.numeric(),
p.value.nonsup = as.numeric(),
p.value.equiv = as.numeric(),
muscle = as.character())
for(i in c("thigh", "arm")) {
data_muscle <- data |>
filter(muscle == i)
std_lm <- lm(estimated_ma ~ cond_dummy,
data = data_muscle)
std <- summary(std_lm)$sigma
data_muscle <- data_muscle |>
mutate(
estimated_ma_z = (estimated_ma - mean(estimated_ma, na.rm=TRUE)) / std
)
model <- lmer(estimated_ma_z ~ time*cond_dummy + (1|site_id) + (time | participant_id),
data = data_muscle, REML = TRUE)
tests <- hypotheses(model, conf_level = 0.9, equivalence = c(-0.1,0.1), vcov = "satterthwaite", df = insight::get_df(model)) |>
mutate(muscle = i)
model_results <- bind_rows(model_results,
tests)
}
data <- data |>
filter(time != "1") |>
mutate(
thigh_ma_1 =(4.68*thigh_circum_1)-(2.09*thigh_skinfold_1)-80.99,
thigh_ma_2 =(4.68*thigh_circum_2)-(2.09*thigh_skinfold_2)-80.99,
thigh_ma_3 =(4.68*thigh_circum_3)-(2.09*thigh_skinfold_3)-80.99,
arm_ma_1 = if_else(sex == "M" ,((arm_circum_1 - (pi * (arm_skinfold_1/10)))^2 / (4*pi))-10, ((arm_circum_1 - (pi * (arm_skinfold_1/10)))^2 / (4*pi))-6.5),
arm_ma_2 = if_else(sex == "M" ,((arm_circum_2 - (pi * (arm_skinfold_2/10)))^2 / (4*pi))-10, ((arm_circum_2 - (pi * (arm_skinfold_2/10)))^2 / (4*pi))-6.5),
arm_ma_3 = if_else(sex == "M" ,((arm_circum_3 - (pi * (arm_skinfold_3/10)))^2 / (4*pi))-10, ((arm_circum_3 - (pi * (arm_skinfold_3/10)))^2 / (4*pi))-6.5)
) |>
select(site_id, participant_id, condition, time, contains("ma")) |>
pivot_longer(5:10,
names_to = "muscle",
values_to = "estimated_ma") |>
mutate(
measurement = case_when(
str_detect(muscle, "1") == TRUE ~ 1,
str_detect(muscle, "2") == TRUE ~ 2,
str_detect(muscle, "3") == TRUE ~ 3
),
muscle = case_when(
str_detect(muscle, "thigh") == TRUE ~ "thigh",
str_detect(muscle, "arm") == TRUE ~ "arm"
)
) |>
mutate(cond_dummy = case_when(
condition == "fROM" ~ -0.5,
condition == "lpROM" ~ 0.5
),
timepoint = factor(case_when(
time == 2 ~ "Pre",
time == 3 ~ "Post"
), levels = c("Pre", "Post"))
) |>
select(site_id, participant_id, condition, cond_dummy, time, timepoint, muscle, estimated_ma)
model_results <- tibble(term = as.character(),
estimate = as.numeric(),
std.error = as.numeric(),
statistic = as.numeric(),
p.value = as.numeric(),
s.value = as.numeric(),
conf.low = as.numeric(),
conf.high = as.numeric(),
df = as.integer(),
statistic.noninf = as.numeric(),
statistic.nonsup = as.numeric(),
p.value.noninf = as.numeric(),
p.value.nonsup = as.numeric(),
p.value.equiv = as.numeric(),
muscle = as.character())
for(i in c("thigh", "arm")) {
data_muscle <- data |>
filter(muscle == i)
std_lm <- lm(estimated_ma ~ cond_dummy,
data = data_muscle)
std <- summary(std_lm)$sigma
data_muscle <- data_muscle |>
mutate(
estimated_ma_z = (estimated_ma - mean(estimated_ma, na.rm=TRUE)) / std
)
model <- lmer(estimated_ma_z ~ time*cond_dummy + (1|site_id) + (time | participant_id),
data = data_muscle, REML = TRUE)
tests <- hypotheses(model, conf_level = 0.9, equivalence = c(-0.1,0.1), vcov = "satterthwaite", df = insight::get_df(model)) |>
mutate(muscle = i)
model_results <- bind_rows(model_results,
tests)
}
model_results
results_hypertrophy
results_strength
View(results_strength)
results_strength$estimate[2]
results_explore_hypertrophy
View(results_explore_hypertrophy)
targets::tar_make()
install.packages("grateful")
targets::tar_make()
targets::tar_make()
#| label: hypertrophy-plot
#| fig-width: 6
#| fig-height: 9
#| fig-cap: Primary pre-registered hypertrophy outcomes. The top two panels show the raw estimated muscle CSA pre- and post-intervention predictions from un-pooled participant level linear regression in addition to the means and 95% quantile intervals. The bottom two panels show estimates and 95% confidence intervals on the standardised scale from the pre-registered model for the main effect of time and the condition:time interaction effect.
plots_hypertrophy
wolf <- osfr::osf_retrieve_node("https://osf.io/q9djw")
wolf <- osfr::osf_retrieve_node("https://osf.io/a6cpz/")
osfr::osf_ls_files(wolf)
osfr::osf_open(wolf[3,])
wolf[3,]
osfr::osf_open(osfr::osf_ls_files(wolf)[3,])
wolf_files <- osfr::osf_ls_files(wolf)
library(osfr)
?osf_download
osf_retrieve_file("q9djw") |>
osf_download(path = "data/wolf_data.csv")
osf_retrieve_file("q9djw") |>
osf_download(path = "data/~")
osf_retrieve_file("q9djw") |>
osf_download(path = "~data/")
osf_retrieve_file("q9djw") |>
osf_download(path = "data/")
file.rename("data/Data Sheet.xlsx", "data/wolf_data.xlsx")
readxl::read_xlsx("data/wolf_data.xlsx")
readxl::read_xlsx("data/wolf_data.xlsx") |>
janitor::clean_names()
wolf_data <- readxl::read_xlsx("data/wolf_data.xlsx") |>
janitor::clean_names()
library(tidyverse)
wolf_summary <- wolf_data |>
group_by(group) |>
summarise(
mean_bb55_pre = mean(bb55_pre),
mean_bb45_pre = mean(bb45_pre),
mean_tb55_pre = mean(tb55_pre),
mean_tb45_pre = mean(tb45_pre),
sd_bb55_pre = sd(bb55_pre),
sd_bb45_pre = sd(bb45_pre),
sd_tb55_pre = sd(tb55_pre),
sd_tb45_pre = sd(tb45_pre),
n = count()
)
wolf_summary <- wolf_data |>
group_by(group) |>
summarise(
mean_bb55_pre = mean(bb55_pre),
mean_bb45_pre = mean(bb45_pre),
mean_tb55_pre = mean(tb55_pre),
mean_tb45_pre = mean(tb45_pre),
sd_bb55_pre = sd(bb55_pre),
sd_bb45_pre = sd(bb45_pre),
sd_tb55_pre = sd(tb55_pre),
sd_tb45_pre = sd(tb45_pre),
n = n()
)
wolf_summary
View(wolf_data)
View(wolf_data)
wolf_data <- readxl::read_xlsx("data/wolf_data.xlsx") |>
janitor::clean_names() |>
slice(1:50)
wolf_summary <- wolf_data |>
group_by(group) |>
summarise(
mean_bb55_pre = mean(bb55_pre),
mean_bb45_pre = mean(bb45_pre),
mean_tb55_pre = mean(tb55_pre),
mean_tb45_pre = mean(tb45_pre),
sd_bb55_pre = sd(bb55_pre),
sd_bb45_pre = sd(bb45_pre),
sd_tb55_pre = sd(tb55_pre),
sd_tb45_pre = sd(tb45_pre),
n = n()
)
wolf_summary
wolf_summary <- wolf_data |>
group_by(group) |>
summarise(
mean_bb55_pre = mean(bb55_pre),
mean_bb45_pre = mean(bb45_pre),
mean_tb55_pre = mean(tb55_pre),
mean_tb45_pre = mean(tb45_pre),
mean_bb55_post = mean(bb55_post),
mean_bb45_post = mean(bb45_post),
mean_tb55_post = mean(tb55_post),
mean_tb45_post = mean(tb45_post),
sd_bb55_pre = sd(bb55_pre),
sd_bb45_pre = sd(bb45_pre),
sd_tb55_pre = sd(tb55_pre),
sd_tb45_pre = sd(tb45_pre),
sd_bb55_post = sd(bb55_post),
sd_bb45_post = sd(bb45_post),
sd_tb55_post = sd(tb55_post),
sd_tb45_post = sd(tb45_post),
cor_bb55 = cor(bb55_pre, bb55_post),
cor_bb45 = cor(bb45_pre, bb45_post),
cor_tb55 = cor(tb55_pre, tbb55_post),
cor_tb45 = cor(tb45_pre, tb45_post),
n = n()
)
wolf_summary <- wolf_data |>
group_by(group) |>
summarise(
mean_bb55_pre = mean(bb55_pre),
mean_bb45_pre = mean(bb45_pre),
mean_tb55_pre = mean(tb55_pre),
mean_tb45_pre = mean(tb45_pre),
mean_bb55_post = mean(bb55_post),
mean_bb45_post = mean(bb45_post),
mean_tb55_post = mean(tb55_post),
mean_tb45_post = mean(tb45_post),
sd_bb55_pre = sd(bb55_pre),
sd_bb45_pre = sd(bb45_pre),
sd_tb55_pre = sd(tb55_pre),
sd_tb45_pre = sd(tb45_pre),
sd_bb55_post = sd(bb55_post),
sd_bb45_post = sd(bb45_post),
sd_tb55_post = sd(tb55_post),
sd_tb45_post = sd(tb45_post),
cor_bb55 = cor(bb55_pre, bb55_post),
cor_bb45 = cor(bb45_pre, bb45_post),
cor_tb55 = cor(tb55_pre, tb55_post),
cor_tb45 = cor(tb45_pre, tb45_post),
n = n()
)
wolf_summary
View(wolf_summary)
library(metafor)
wolf_summary |>
pivot_longer(-group,
names_to = c("Var", ".value"),
names_sep="_" )
wolf_summary <- wolf_data |>
group_by(group) |>
summarise(
bb55_premean = mean(bb55_pre),
bb45_premean = mean(bb45_pre),
tb55_premean = mean(tb55_pre),
tb45_premean = mean(tb45_pre),
bb55_postmean = mean(bb55_post),
bb45_postmean = mean(bb45_post),
tb55_postmean = mean(tb55_post),
tb45_postmean = mean(tb45_post),
bb55_presd = sd(bb55_pre),
bb45_presd = sd(bb45_pre),
tb55_presd = sd(tb55_pre),
tb45_presd = sd(tb45_pre),
bb55_postsd = sd(bb55_post),
bb45_postsd = sd(bb45_post),
tb55_postsd = sd(tb55_post),
tb45_postsd = sd(tb45_post),
bb55_cor = cor(bb55_pre, bb55_post),
bb45_cor = cor(bb45_pre, bb45_post),
tb55_cor = cor(tb55_pre, tb55_post),
tb45_cor = cor(tb45_pre, tb45_post),
n = n()
)
wolf_summary |>
pivot_longer(c(-group, -n),
names_to = c("Var", ".value"),
names_sep="_" )
wolf_summary <-  escalc(measure = "SMCR",
m1i = postmean, m2i = premean,
sd1i = presd,
ri = cor, ni = n,
data = wolf_summary
)
wolf_summary
wolf_summary <- wolf_data |>
group_by(group) |>
summarise(
bb55_premean = mean(bb55_pre),
bb45_premean = mean(bb45_pre),
tb55_premean = mean(tb55_pre),
tb45_premean = mean(tb45_pre),
bb55_postmean = mean(bb55_post),
bb45_postmean = mean(bb45_post),
tb55_postmean = mean(tb55_post),
tb45_postmean = mean(tb45_post),
bb55_presd = sd(bb55_pre),
bb45_presd = sd(bb45_pre),
tb55_presd = sd(tb55_pre),
tb45_presd = sd(tb45_pre),
bb55_postsd = sd(bb55_post),
bb45_postsd = sd(bb45_post),
tb55_postsd = sd(tb55_post),
tb45_postsd = sd(tb45_post),
bb55_cor = cor(bb55_pre, bb55_post),
bb45_cor = cor(bb45_pre, bb45_post),
tb55_cor = cor(tb55_pre, tb55_post),
tb45_cor = cor(tb45_pre, tb45_post),
n = n()
) |>
pivot_longer(c(-group, -n),
names_to = c("Var", ".value"),
names_sep="_" )
wolf_summary <-  escalc(measure = "SMCR",
m1i = postmean, m2i = premean,
sd1i = presd,
ri = cor, ni = n,
data = wolf_summary
)
wolf_summary
ppc_effects |> wolf_summary |>
select(group, yi, vi) |>
pivot_wider(names_from = "group",
values_from = c("yi", "vi"))
ppc_effects <- wolf_summary |>
select(group, yi, vi) |>
pivot_wider(names_from = "group",
values_from = c("yi", "vi"))
ppc_effects
ppc_effects <- wolf_summary |>
select(group, yi, vi) |>
pivot_wider(id_cols = "Var",
names_from = "group",
values_from = c("yi", "vi"))
wolf_summary
ppc_effects <- wolf_summary |>
select(group, yi, vi) |>
pivot_wider(id_cols = Var,
names_from = "group",
values_from = c("yi", "vi"))
ppc_effects <- wolf_summary |>
select(group, Var, yi, vi) |>
pivot_wider(id_cols = "Var",
names_from = "group",
values_from = c("yi", "vi"))
ppc_effects
ppc_effects <- wolf_summary |>
select(group, Var, yi, vi) |>
pivot_wider(id_cols = "Var",
names_from = "group",
values_from = c("yi", "vi")) |>
mutate(smd_ppc = yi_2 - yi _1,
ppc_effects <- wolf_summary |>
select(group, Var, yi, vi) |>
pivot_wider(id_cols = "Var",
names_from = "group",
values_from = c("yi", "vi")) |>
mutate(smd_ppc = yi_2 - yi_1,
smd_ppc_vi = vi_1 + vi_2)
ppc_effects
smd_ppc_higher = smd_ppc + sqrt((vi_1 + vi_2)*1.96)
ppc_effects <- wolf_summary |>
select(group, Var, yi, vi) |>
pivot_wider(id_cols = "Var",
names_from = "group",
values_from = c("yi", "vi")) |>
mutate(smd_ppc = yi_2 - yi_1,
smd_ppc_lower = smd_ppc - sqrt((vi_1 + vi_2)*1.96),
smd_ppc_higher = smd_ppc + sqrt((vi_1 + vi_2)*1.96)
)
ppc_effects
targets::tar_load(PD_hypertrophy_data)
targets::tar_load(data_hypertrophy)
View(data_hypertrophy)
library(tidyverse)
data_hypertrophy |>
group_by(participant_id) |>
slice(1)
data_hypertrophy |>
group_by(participant_id) |>
slice(1) |>
group_by(sex) |>
count()
data_hypertrophy |>
group_by(participant_id) |>
slice(1) |>
group_by(sex, condition) |>
count()
