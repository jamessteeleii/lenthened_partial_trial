thigh_ma ~ time * cond_dummy + (1 | site) + (1 | participant),
data = dat,
REML = TRUE
)
hypothesis_tests_arm <- hypotheses(model_arm, equivalence = c(NA,0.1), vcov = "satterthwaite", df = insight::get_df(model_arm))[4,] |>
mutate(muscle_site = "arm")
hypothesis_tests_thigh <- hypotheses(model_thigh, equivalence = c(NA,0.1), vcov = "satterthwaite", df = insight::get_df(model_thigh))[4,] |>
mutate(muscle_site = "arm")
bind_rows(hypothesis_tests_arm, hypothesis_tests_thigh)
}
sim_0_2 <- crossing(
rep = 1:10,
# number of replicates
# participant_n = seq(5, 20, by = 5),
# range of participant N
site_n = 3,
# fixed site N
time_n = c(0.5, 1),
# to examine inclusion of midpoint test or not
measurements_n = c(1:3),
# range of measurements N
) |>
mutate(
b0 = 0,
b_time = 0.05,
b_cond = 0,
b_cond_time = 0.025,
# fixed effects
u_site = sqrt(site_variance$study)[1],
# random intercept site
u_participant_arm = (1 - sqrt(site_variance$study)[1] - arm_ma_reliability),
# random intercept participant arm
u_participant_thigh = (1 - sqrt(site_variance$study)[1] - thigh_ma_reliability),
# random intercetp participant thigh
arm_ma_error = arm_ma_reliability,
# measurement error arm
thigh_ma_error = thigh_ma_reliability,         # measurement error thigh
participant_n = "c(5,10,15)"
) %>%
mutate(analysis = pmap(., sim)) %>% # not sure why base pipe doesn't work here
unnest(analysis)
sim <-
function(
participant_n = as.double(),
site_n = as.double(),
time_n = as.double(),
measurements_n = as.double(),
b0 = as.double(),
b_time = as.double(),
b_cond = as.double(),
b_cond_time = as.double(),
# fixed effects
u_site = as.double(),
u_participant_arm = as.double(),
u_participant_thigh = as.double(),
# random intercepts
arm_ma_error = as.double(),
thigh_ma_error = as.double(),
# measurement error
... # helps the function work with pmap() below
) {
# set up data structure
dat <- add_random(site = site_n) |>
add_random(participant = participant_n, .nested_in = "site") |>
add_between("participant", cond = c("full_ROM", "lengthened_partial")) |>
add_recode("cond",
"cond_dummy",
full_ROM = 0,
lengthened_partial = 1) |>
add_within(
"participant",
time = seq(0, 1, by = time_n),
measurement = seq(1:measurements_n)
) |>
# add_recode("time", "time_cont", pre = 0, mid = 0.5, post = 1) |>
add_ranef("site", u_site = u_site) |>
add_ranef("participant", u_participant_arm = u_participant_arm) |>
add_ranef("participant", u_participant_thigh = u_participant_thigh) |>
add_ranef(arm_ma_error = arm_ma_error) |>
add_ranef(thigh_ma_error = thigh_ma_error) |>
mutate(
arm_ma = (b0 + u_site + u_participant_arm) + (b_time * time) + (b_cond * cond_dummy) + (b_cond_time * cond_dummy * time) + arm_ma_error,
thigh_ma = (b0 + u_site + u_participant_thigh) + (b_time * time) + (b_cond * cond_dummy) + (b_cond_time * cond_dummy * time) + thigh_ma_error
)
# run mixed effect model and return relevant values
model_arm <-
lmer(
arm_ma ~ time * cond_dummy + (1 | site) + (1 | participant),
data = dat,
REML = TRUE
)
model_thigh <-
lmer(
thigh_ma ~ time * cond_dummy + (1 | site) + (1 | participant),
data = dat,
REML = TRUE
)
hypothesis_tests_arm <- hypotheses(model_arm, equivalence = c(NA,0.1), vcov = "satterthwaite", df = insight::get_df(model_arm))[4,] |>
mutate(muscle_site = "arm")
hypothesis_tests_thigh <- hypotheses(model_thigh, equivalence = c(NA,0.1), vcov = "satterthwaite", df = insight::get_df(model_thigh))[4,] |>
mutate(muscle_site = "arm")
bind_rows(hypothesis_tests_arm, hypothesis_tests_thigh)
}
plan(cluster, workers = 10)
sim_0_2 <- crossing(
rep = 1:10,
# number of replicates
# participant_n = seq(5, 20, by = 5),
# range of participant N
site_n = 3,
# fixed site N
time_n = c(0.5, 1),
# to examine inclusion of midpoint test or not
measurements_n = c(1:3),
# range of measurements N
) |>
mutate(
b0 = 0,
b_time = 0.05,
b_cond = 0,
b_cond_time = 0.025,
# fixed effects
u_site = sqrt(site_variance$study)[1],
# random intercept site
u_participant_arm = (1 - sqrt(site_variance$study)[1] - arm_ma_reliability),
# random intercept participant arm
u_participant_thigh = (1 - sqrt(site_variance$study)[1] - thigh_ma_reliability),
# random intercetp participant thigh
arm_ma_error = arm_ma_reliability,
# measurement error arm
thigh_ma_error = thigh_ma_reliability,         # measurement error thigh
participant_n = "c(5,10,15)"
) %>%
mutate(analysis = pmap(., sim)) %>% # not sure why base pipe doesn't work here
unnest(analysis)
sum(5,30,15,40,5,25,30,25,25,15,30,10,5,30,5)
plan(sequential)
targets::tar_visnetwork()
targets::tar_make()
targets::tar_load(sim_est_numbers)
View(sim_est_numbers)
sim_est_numbers |>
filter(term == "time:cond_dummy") |>
mutate(
time_n = case_when(
time_n == 0.5 ~ "Include Midpoint",
time_n == 1 ~ "No Midpoint",
)
) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
mutate(
u_time = case_when(
u_time == 0.0304 ~ "5% Negative Slopes",
u_time == 0.039 ~ "10% Negative Slopes",
)
) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
pivot_longer(c("p.value", "p.value.nonsup"),
names_to = "test",
values_to = "p.value") |>
mutate(test = case_when(test == "p.value" ~ "Difference",
test == "p.value.nonsup" ~ "Non-superiority")) |>
group_by(measurements_n, time_n, u_time, test) |>
summarise(power = mean(p.value < .005),
.groups = "drop")
targets::tar_make()
sim_est_numbers |>
filter(term == "time:cond_dummy") |>
mutate(
time_n = case_when(
time_n == 0.5 ~ "Include Midpoint",
time_n == 1 ~ "No Midpoint",
)
) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
# mutate(
#   u_time = case_when(
#     u_time == 0.0304 ~ "5% Negative Slopes",
#     u_time == 0.039 ~ "10% Negative Slopes",
#   )
# ) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
pivot_longer(c("p.value", "p.value.nonsup"),
names_to = "test",
values_to = "p.value") |>
mutate(test = case_when(test == "p.value" ~ "Difference",
test == "p.value.nonsup" ~ "Non-superiority")) |>
group_by(measurements_n, time_n, test) |>
summarise(power = mean(p.value < .005),
.groups = "drop")
targets::tar_load(sim_est_numbers)
sim_est_numbers |>
filter(term == "time:cond_dummy") |>
mutate(
time_n = case_when(
time_n == 0.5 ~ "Include Midpoint",
time_n == 1 ~ "No Midpoint",
)
) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
mutate(
u_time = case_when(
u_time == 0.0304 ~ "5% Negative Slopes",
u_time == 0.039 ~ "10% Negative Slopes",
)
) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
pivot_longer(c("p.value", "p.value.nonsup"),
names_to = "test",
values_to = "p.value") |>
mutate(test = case_when(test == "p.value" ~ "Difference",
test == "p.value.nonsup" ~ "Non-superiority")) |>
group_by(measurements_n, time_n, test) |>
summarise(power = mean(p.value < .005),
.groups = "drop")
sim_est_numbers |>
filter(term == "time:cond_dummy") |>
mutate(
time_n = case_when(
time_n == 0.5 ~ "Include Midpoint",
time_n == 1 ~ "No Midpoint",
)
) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
mutate(
u_time = case_when(
u_time == 0.0304 ~ "5% Negative Slopes",
u_time == 0.039 ~ "10% Negative Slopes",
)
) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
pivot_longer(c("p.value", "p.value.nonsup"),
names_to = "test",
values_to = "p.value") |>
mutate(test = case_when(test == "p.value" ~ "Difference",
test == "p.value.nonsup" ~ "Non-superiority")) |>
group_by(measurements_n, time_n, u_time, test) |>
summarise(power = mean(p.value < .005),
.groups = "drop")
sim_est_numbers |>
filter(term == "time:cond_dummy") |>
mutate(
time_n = case_when(
time_n == 0.5 ~ "Include Midpoint",
time_n == 1 ~ "No Midpoint",
)
) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
mutate(
u_time = case_when(
u_time == 0.0304 ~ "5% Negative Slopes",
u_time == 0.039 ~ "10% Negative Slopes",
)
) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
pivot_longer(c("p.value", "p.value.nonsup"),
names_to = "test",
values_to = "p.value") |>
mutate(test = case_when(test == "p.value" ~ "Difference",
test == "p.value.nonsup" ~ "Non-superiority")) |>
group_by(measurements_n, time_n, u_time, test) |>
summarise(power = mean(p.value < .005),
.groups = "drop") |>
ggplot(aes(y = power, color = factor(measurements_n))) +
geom_hline(yintercept = 0.95, linetype = "dashed") +
geom_point() +
geom_line()
sim_est_numbers |>
filter(term == "time:cond_dummy") |>
mutate(
time_n = case_when(
time_n == 0.5 ~ "Include Midpoint",
time_n == 1 ~ "No Midpoint",
)
) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
mutate(
u_time = case_when(
u_time == 0.0304 ~ "5% Negative Slopes",
u_time == 0.039 ~ "10% Negative Slopes",
)
) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
pivot_longer(c("p.value", "p.value.nonsup"),
names_to = "test",
values_to = "p.value") |>
mutate(test = case_when(test == "p.value" ~ "Difference",
test == "p.value.nonsup" ~ "Non-superiority")) |>
group_by(measurements_n, time_n, u_time, test) |>
summarise(power = mean(p.value < .005),
.groups = "drop") |>
ggplot(aes(x = measurements_n, y = power, color = factor(measurements_n))) +
geom_hline(yintercept = 0.95, linetype = "dashed") +
geom_point()
sim_est_numbers |>
filter(term == "time:cond_dummy") |>
mutate(
time_n = case_when(
time_n == 0.5 ~ "Include Midpoint",
time_n == 1 ~ "No Midpoint",
)
) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
mutate(
u_time = case_when(
u_time == 0.0304 ~ "5% Negative Slopes",
u_time == 0.039 ~ "10% Negative Slopes",
)
) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
pivot_longer(c("p.value", "p.value.nonsup"),
names_to = "test",
values_to = "p.value") |>
mutate(test = case_when(test == "p.value" ~ "Difference",
test == "p.value.nonsup" ~ "Non-superiority")) |>
group_by(measurements_n, time_n, u_time, test) |>
summarise(power = mean(p.value < .005),
.groups = "drop") |>
ggplot(aes(x = measurements_n, y = power, color = factor(measurements_n))) +
geom_hline(yintercept = 0.95, linetype = "dashed") +
geom_point() +
geom_line() +
scale_color_manual(values = c("#000000", "#E69F00", "#56B4E9")) +
facet_nested(time_n + u_time ~ test) +
labs(
x = "Total Number of Participants per Site (N)",
y = "Power (1-\u03b2)",
color = "Number of Measurements per Timepoint (N)",
title = "Sample Size Estimation (N per Site)",
subtitle = expression(~italic(y)[ijtk]~" = (\u03b2"[0]~" + "~u[k]~" + "~u[i]~") + \u03b2"[1]~"condition"[j]~" + (\u03b2"[2]~" + "~u[j]~")time"[t]~" + \u03b2"[3]~"condition:time"[jt]~" + \u03f5"[ijtk]),
caption = "Simulated to detect a standardised effect, or non-superiority, for condition:time with a SESOI of 0.1\nSite number k fixed at 15, \u03b1 = 0.05 (corrected to 0.025 for two primary outcomes i.e., arm and thigh muscle area)\n1000 simulations per combination of participants, number of measurements, and timepoints"
) +
theme_bw() +
theme(legend.position = "bottom")
library(ggh4x)
plot_sim <- sim_est_numbers |>
filter(term == "time:cond_dummy") |>
mutate(
time_n = case_when(
time_n == 0.5 ~ "Include Midpoint",
time_n == 1 ~ "No Midpoint",
)
) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
mutate(
u_time = case_when(
u_time == 0.0304 ~ "5% Negative Slopes",
u_time == 0.039 ~ "10% Negative Slopes",
)
) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
pivot_longer(c("p.value", "p.value.nonsup"),
names_to = "test",
values_to = "p.value") |>
mutate(test = case_when(test == "p.value" ~ "Difference",
test == "p.value.nonsup" ~ "Non-superiority")) |>
group_by(measurements_n, time_n, u_time, test) |>
summarise(power = mean(p.value < .005),
.groups = "drop") |>
ggplot(aes(x = measurements_n, y = power, color = factor(measurements_n))) +
geom_hline(yintercept = 0.95, linetype = "dashed") +
geom_point() +
geom_line() +
scale_color_manual(values = c("#000000", "#E69F00", "#56B4E9")) +
facet_nested(time_n + u_time ~ test) +
labs(
x = "Total Number of Participants per Site (N)",
y = "Power (1-\u03b2)",
color = "Number of Measurements per Timepoint (N)",
title = "Sample Size Estimation (N per Site)",
subtitle = expression(~italic(y)[ijtk]~" = (\u03b2"[0]~" + "~u[k]~" + "~u[i]~") + \u03b2"[1]~"condition"[j]~" + (\u03b2"[2]~" + "~u[j]~")time"[t]~" + \u03b2"[3]~"condition:time"[jt]~" + \u03f5"[ijtk]),
caption = "Simulated to detect a standardised effect, or non-superiority, for condition:time with a SESOI of 0.1\nSite number k fixed at 15, \u03b1 = 0.05 (corrected to 0.025 for two primary outcomes i.e., arm and thigh muscle area)\n1000 simulations per combination of participants, number of measurements, and timepoints"
) +
theme_bw() +
theme(legend.position = "bottom")
plot_sim
plot_sim <- sim_est_numbers |>
filter(term == "time:cond_dummy") |>
mutate(
time_n = case_when(
time_n == 0.5 ~ "Include Midpoint",
time_n == 1 ~ "No Midpoint",
)
) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
mutate(
u_time = case_when(
u_time == 0.0304 ~ "5% Negative Slopes",
u_time == 0.039 ~ "10% Negative Slopes",
)
) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
pivot_longer(c("p.value", "p.value.nonsup"),
names_to = "test",
values_to = "p.value") |>
mutate(test = case_when(test == "p.value" ~ "Difference",
test == "p.value.nonsup" ~ "Non-superiority")) |>
group_by(measurements_n, time_n, u_time, test) |>
summarise(power = mean(p.value < .005),
.groups = "drop") |>
ggplot(aes(x = measurements_n, y = power, color = factor(measurements_n))) +
geom_hline(yintercept = 0.95, linetype = "dashed") +
geom_point() +
geom_line() +
scale_color_manual(values = c("#000000", "#E69F00", "#56B4E9")) +
facet_nested(time_n + u_time ~ test) +
labs(
x = "Number of Measurements per Timepoint (N)",
y = "Power (1-\u03b2)",
color = "Number of Measurements per Timepoint (N)",
title = "Sample Size Estimation (N per Site)",
subtitle = expression(~italic(y)[ijtk]~" = (\u03b2"[0]~" + "~u[k]~" + "~u[i]~") + \u03b2"[1]~"condition"[j]~" + (\u03b2"[2]~" + "~u[j]~")time"[t]~" + \u03b2"[3]~"condition:time"[jt]~" + \u03f5"[ijtk]),
caption = "Simulated to detect a standardised effect, or non-superiority, for condition:time with a SESOI of 0.1\nSite number k fixed at 15, \u03b1 = 0.05 (corrected to 0.025 for two primary outcomes i.e., arm and thigh muscle area)\n1000 simulations per combination of participants, number of measurements, and timepoints"
) +
theme_bw() +
theme(legend.position = "bottom")
plot_sim
View(sim_est_numbers)
plot_sim <- sim_est_numbers |>
filter(term == "time:cond_dummy") |>
mutate(
time_n = case_when(
time_n == 0.5 ~ "Include Midpoint",
time_n == 1 ~ "No Midpoint",
)
) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
mutate(
u_time = case_when(
u_time == 0.0304 ~ "5% Negative Slopes",
u_time == 0.039 ~ "10% Negative Slopes",
)
) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
pivot_longer(c("p.value", "p.value.nonsup"),
names_to = "test",
values_to = "p.value") |>
mutate(test = case_when(test == "p.value" ~ "Difference",
test == "p.value.nonsup" ~ "Non-superiority")) |>
group_by(measurements_n, time_n, u_time, test) |>
summarise(power = mean(p.value < .005),
.groups = "drop")
0.05/2
0.01/2
plot_sim <- sim_est_numbers |>
filter(term == "time:cond_dummy") |>
mutate(
time_n = case_when(
time_n == 0.5 ~ "Include Midpoint",
time_n == 1 ~ "No Midpoint",
)
) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
mutate(
u_time = case_when(
u_time == 0.0304 ~ "5% Negative Slopes",
u_time == 0.039 ~ "10% Negative Slopes",
)
) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
pivot_longer(c("p.value", "p.value.nonsup"),
names_to = "test",
values_to = "p.value") |>
mutate(test = case_when(test == "p.value" ~ "Difference",
test == "p.value.nonsup" ~ "Non-superiority")) |>
group_by(measurements_n, time_n, u_time, test) |>
summarise(power = mean(p.value < .005),
.groups = "drop") |>
ggplot(aes(x = factor(measurements_n), y = power, color = factor(measurements_n))) +
geom_hline(yintercept = 0.95, linetype = "dashed") +
geom_point() +
geom_line() +
scale_color_manual(values = c("#000000", "#E69F00", "#56B4E9")) +
facet_nested(time_n + u_time ~ test) +
labs(
x = "Number of Measurements per Timepoint (N)",
y = "Power (1-\u03b2)",
color = "Number of Measurements per Timepoint (N)",
title = "Simulated Power with Site Predicted Recruitment Numbers",
subtitle = expression(~italic(y)[ijtk]~" = (\u03b2"[0]~" + "~u[k]~" + "~u[i]~") + \u03b2"[1]~"condition"[j]~" + (\u03b2"[2]~" + "~u[j]~")time"[t]~" + \u03b2"[3]~"condition:time"[jt]~" + \u03f5"[ijtk]),
caption = "Simulated to detect a standardised effect, or non-superiority, for condition:time with a SESOI of 0.1\nSite number k fixed at 15, \u03b1 = 0.01 (corrected to 0.005 for two primary outcomes i.e., arm and thigh muscle area)\n1000 simulations per combination of number of participants, number of measurements, random slopes for time, and timepoints"
) +
theme_bw() +
theme(legend.position = "bottom")
plot_sim
plot_sim <- sim_est_numbers |>
filter(term == "time:cond_dummy") |>
mutate(
time_n = case_when(
time_n == 0.5 ~ "Include Midpoint",
time_n == 1 ~ "No Midpoint",
)
) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
mutate(
u_time = case_when(
u_time == 0.0304 ~ "5% Negative Slopes",
u_time == 0.039 ~ "10% Negative Slopes",
)
) |>
mutate(time_n = factor(time_n, levels = c("No Midpoint", "Include Midpoint"))) |>
pivot_longer(c("p.value", "p.value.nonsup"),
names_to = "test",
values_to = "p.value") |>
mutate(test = case_when(test == "p.value" ~ "Difference",
test == "p.value.nonsup" ~ "Non-superiority")) |>
group_by(measurements_n, time_n, u_time, test) |>
summarise(power = mean(p.value < .005),
.groups = "drop")
View(plot_sim)
targets::tar_make()
targets::tar_make()
